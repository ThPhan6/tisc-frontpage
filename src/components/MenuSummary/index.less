.form(@fw, @txttran, @fs: '12px', @ff: 'roboto', @fstyle: 'normal', @lh: '20', ) {
  font-weight: @fw;
  font-size: @fs;
  font-family: @ff;
  font-style: @fstyle;
  line-height: @lh;
  text-transform: @txttran;
}
.element {
  @fw: 500;
  @txttran: uppercase;
  label,
  span {
    .form(@fw, @txttran);
  }

  .mr-8 {
    margin-right: 8px;
  }

  .cursor-pointer {
    cursor: pointer;
  }
}
.item {
  @fw: 300;
  @txttran: capitalize;
  label,
  span {
    .form(@fw, @txttran);
  }

  .flex-column {
    display: flex;
    flex-direction: column;
  }
}

.menu {
  padding: 7px 12px;

  .border-left:not(:first-of-type) {
    box-shadow: inset 0.5px 0 0 rgba(0, 0, 0, 0.3);
  }

  .px-12 {
    padding-right: 24px;
    padding-left: 12px;
  }
}

.d-flex {
  display: flex;
  align-items: center;
}

.active {
  color: @tertiary-color;

  .item {
    padding-left: 36px;
    animation: slideToRight 0.4s ease-out forwards;
  }

  svg {
    animation: rotateToLeft 0.4s ease forwards;
  }
  svg path {
    fill: @tertiary-color;
  }
}
.unactive {
  color: @mono-color;

  svg {
    animation: rotateToRight 0.4s ease forwards;
  }
  svg path {
    fill: @mono-color;
  }
}

@keyframes rotateToLeft {
  from {
    transform: rotate(180deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes rotateToRight {
  from {
    transform: rotate(180deg);
  }
  to {
    transform: rotate(0deg);
  }
}

@keyframes slideToRight {
  0% {
    transform: translateX(-5%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
