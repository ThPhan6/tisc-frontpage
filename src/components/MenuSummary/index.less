.form(@fw, @txttran, @fs: '12px', @ff: 'roboto', @fstyle: 'normal', @lh: '20', ) {
  font-weight: @fw;
  font-size: @fs;
  font-family: @ff;
  font-style: @fstyle;
  line-height: @lh;
  text-transform: @txttran;
}

.d-flex {
  display: flex;
  align-items: center;
}

.element-container {
  cursor: pointer;
  .d-flex();

  @fw: 500;
  @txttran: uppercase;

  span {
    .form(@fw, @txttran);
  }

  .mr-8 {
    margin-right: 8px;
  }
}

.item-container {
  cursor: default;

  @fw: 300;
  @txttran: capitalize;

  span {
    .form(@fw, @txttran);
  }

  .flex-column {
    display: flex;
    flex-direction: column;
  }
}

.menu-container {
  padding: 7px 12px;
  @active-color: @tertiary-color;
  @unactive-color: @mono-color;
  .d-flex();

  .border-left:not(:first-of-type) {
    box-shadow: inset 0.5px 0 0 rgba(0, 0, 0, 0.3);
  }

  .px-12 {
    padding-right: 24px;
    padding-left: 12px;
  }

  .active {
    color: @active-color;

    .item-container {
      padding-left: 36px;
      animation: slideToRight 0.4s ease-out forwards;
    }

    svg {
      animation: rotateToLeft 0.4s ease forwards;
    }
    svg path {
      fill: @active-color;
    }
  }

  .unactive {
    color: @unactive-color;

    svg {
      animation: rotateToRight 0.4s ease forwards;
    }
    svg path {
      fill: @unactive-color;
    }
  }
}

@keyframes rotateToLeft {
  from {
    transform: rotate(180deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes rotateToRight {
  from {
    transform: rotate(180deg);
  }
  to {
    transform: rotate(0deg);
  }
}

@keyframes slideToRight {
  0% {
    transform: translateX(-5%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
